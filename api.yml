#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Users
  description: Ruby (on Rails) + PostgreSQL

host: 192.168.99.101:3000
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    post:
      summary: Creates a new user
      operationId: createUser
      parameters:
        - name: user
          in: body
          required: true
          description: User Object
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    get:
      summary: Returns all users
      operationId: getAllUsers
      responses:
        '200':
          description: Ok
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: Internal Server Error

  /users/{code}:
    get:
      summary: Returns a user with the given code
      operationId: getUserByCode
      parameters:
        - name: code
          in: path
          description: The code of the user to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: unexpected error

    put:
      summary: Updates an user with the given code
      operationId: updateUser
      parameters:
        - name: code
          in: path
          description: The code of the user to be updated
          required: true
          type: integer
        - name: user
          in: body
          required: true
          description: user Object
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: unexpected error

    delete:
      summary: Deletes a course with the given code
      operationId: deleteCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '204':
          description: Ok
        '404':
          description: Not Found
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: unexpected error

definitions:

  # Users
  user:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
      password:
        type: string

  UserInput:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string

  UsersList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Course'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
